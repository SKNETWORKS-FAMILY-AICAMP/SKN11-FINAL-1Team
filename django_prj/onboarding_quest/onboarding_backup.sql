--
-- PostgreSQL database dump
--

-- Dumped from database version 17.5
-- Dumped by pg_dump version 17.5

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_alarm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_alarm (
    id integer NOT NULL,
    message text NOT NULL,
    created_at timestamp with time zone,
    is_active boolean NOT NULL,
    url_link character varying(200),
    user_id integer NOT NULL
);


ALTER TABLE public.core_alarm OWNER TO postgres;

--
-- Name: core_alarm_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_alarm ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_alarm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_chatmessage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_chatmessage (
    message_id integer NOT NULL,
    message_type character varying(10) NOT NULL,
    message_text text,
    create_time timestamp with time zone,
    is_active boolean NOT NULL,
    session_id integer NOT NULL
);


ALTER TABLE public.core_chatmessage OWNER TO postgres;

--
-- Name: core_chatmessage_message_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_chatmessage ALTER COLUMN message_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_chatmessage_message_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_chatsession; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_chatsession (
    session_id integer NOT NULL,
    summary character varying(255),
    is_active boolean NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.core_chatsession OWNER TO postgres;

--
-- Name: core_chatsession_session_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_chatsession ALTER COLUMN session_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_chatsession_session_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_company; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_company (
    company_id character varying(12) NOT NULL,
    company_name character varying(255) NOT NULL
);


ALTER TABLE public.core_company OWNER TO postgres;

--
-- Name: core_curriculum; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_curriculum (
    curriculum_id integer NOT NULL,
    curriculum_description text,
    curriculum_title character varying(255) NOT NULL,
    common boolean NOT NULL,
    total_weeks integer NOT NULL,
    week_schedule text,
    department_id integer
);


ALTER TABLE public.core_curriculum OWNER TO postgres;

--
-- Name: core_curriculum_curriculum_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_curriculum ALTER COLUMN curriculum_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_curriculum_curriculum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_department; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_department (
    department_id integer NOT NULL,
    department_name character varying(50) NOT NULL,
    description character varying(255),
    is_active boolean NOT NULL,
    company_id character varying(12)
);


ALTER TABLE public.core_department OWNER TO postgres;

--
-- Name: core_department_department_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_department ALTER COLUMN department_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_department_department_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_docs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_docs (
    docs_id integer NOT NULL,
    title character varying(255) NOT NULL,
    description character varying(255),
    file_path character varying(255) NOT NULL,
    create_time timestamp with time zone NOT NULL,
    common_doc boolean NOT NULL,
    original_file_name character varying(255),
    department_id integer NOT NULL
);


ALTER TABLE public.core_docs OWNER TO postgres;

--
-- Name: core_docs_docs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_docs ALTER COLUMN docs_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_docs_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_emailconfig; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_emailconfig (
    id integer NOT NULL,
    email character varying(254) NOT NULL,
    password character varying(255) NOT NULL,
    name character varying(100) NOT NULL
);


ALTER TABLE public.core_emailconfig OWNER TO postgres;

--
-- Name: core_emailconfig_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_emailconfig ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_emailconfig_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_memo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_memo (
    memo_id integer NOT NULL,
    create_date timestamp with time zone,
    comment text,
    user_id integer,
    task_assign_id integer NOT NULL
);


ALTER TABLE public.core_memo OWNER TO postgres;

--
-- Name: core_memo_memo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_memo ALTER COLUMN memo_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_memo_memo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_mentorship; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_mentorship (
    mentorship_id integer NOT NULL,
    mentor_id integer NOT NULL,
    mentee_id integer NOT NULL,
    start_date date,
    end_date date,
    is_active boolean NOT NULL,
    curriculum_title character varying(255) NOT NULL,
    total_weeks integer NOT NULL,
    report text,
    url_link character varying(200)
);


ALTER TABLE public.core_mentorship OWNER TO postgres;

--
-- Name: core_mentorship_mentorship_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_mentorship ALTER COLUMN mentorship_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_mentorship_mentorship_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_taskassign; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_taskassign (
    task_assign_id integer NOT NULL,
    title character varying(255),
    description text,
    guideline text,
    week integer NOT NULL,
    scheduled_start_date date,
    scheduled_end_date date,
    real_start_date date,
    real_end_date date,
    status character varying(10),
    priority character varying(2),
    "order" integer,
    mentorship_id_id integer NOT NULL,
    parent_id integer
);


ALTER TABLE public.core_taskassign OWNER TO postgres;

--
-- Name: core_taskassign_task_assign_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_taskassign ALTER COLUMN task_assign_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_taskassign_task_assign_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_taskmanage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_taskmanage (
    task_manage_id integer NOT NULL,
    title character varying(255) NOT NULL,
    description text,
    guideline text,
    week integer NOT NULL,
    "order" integer,
    period integer,
    priority character varying(2),
    curriculum_id integer NOT NULL
);


ALTER TABLE public.core_taskmanage OWNER TO postgres;

--
-- Name: core_taskmanage_task_manage_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_taskmanage ALTER COLUMN task_manage_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_taskmanage_task_manage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_user (
    is_superuser boolean NOT NULL,
    user_id integer NOT NULL,
    employee_number integer,
    is_admin boolean NOT NULL,
    tag character varying(255),
    role character varying(20) NOT NULL,
    join_date date,
    "position" character varying(50) NOT NULL,
    job_part character varying(50) NOT NULL,
    email character varying(254) NOT NULL,
    password character varying(128) NOT NULL,
    last_name character varying(50) NOT NULL,
    first_name character varying(50) NOT NULL,
    last_login timestamp with time zone,
    profile_image character varying(100),
    is_active boolean NOT NULL,
    is_staff boolean NOT NULL,
    company_id character varying(12),
    department_id integer
);


ALTER TABLE public.core_user OWNER TO postgres;

--
-- Name: core_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.core_user_groups OWNER TO postgres;

--
-- Name: core_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_user_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_user ALTER COLUMN user_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_user_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.core_user_user_permissions OWNER TO postgres;

--
-- Name: core_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add content type	4	add_contenttype
14	Can change content type	4	change_contenttype
15	Can delete content type	4	delete_contenttype
16	Can view content type	4	view_contenttype
17	Can add session	5	add_session
18	Can change session	5	change_session
19	Can delete session	5	delete_session
20	Can view session	5	view_session
21	Can add company	6	add_company
22	Can change company	6	change_company
23	Can delete company	6	delete_company
24	Can view company	6	view_company
25	Can add email config	7	add_emailconfig
26	Can change email config	7	change_emailconfig
27	Can delete email config	7	delete_emailconfig
28	Can view email config	7	view_emailconfig
29	Can add mentorship	8	add_mentorship
30	Can change mentorship	8	change_mentorship
31	Can delete mentorship	8	delete_mentorship
32	Can view mentorship	8	view_mentorship
33	Can add user	9	add_user
34	Can change user	9	change_user
35	Can delete user	9	delete_user
36	Can view user	9	view_user
37	Can add alarm	10	add_alarm
38	Can change alarm	10	change_alarm
39	Can delete alarm	10	delete_alarm
40	Can view alarm	10	view_alarm
41	Can add chat session	11	add_chatsession
42	Can change chat session	11	change_chatsession
43	Can delete chat session	11	delete_chatsession
44	Can view chat session	11	view_chatsession
45	Can add chat message	12	add_chatmessage
46	Can change chat message	12	change_chatmessage
47	Can delete chat message	12	delete_chatmessage
48	Can view chat message	12	view_chatmessage
49	Can add department	13	add_department
50	Can change department	13	change_department
51	Can delete department	13	delete_department
52	Can view department	13	view_department
53	Can add curriculum	14	add_curriculum
54	Can change curriculum	14	change_curriculum
55	Can delete curriculum	14	delete_curriculum
56	Can view curriculum	14	view_curriculum
57	Can add docs	15	add_docs
58	Can change docs	15	change_docs
59	Can delete docs	15	delete_docs
60	Can view docs	15	view_docs
61	Can add task assign	16	add_taskassign
62	Can change task assign	16	change_taskassign
63	Can delete task assign	16	delete_taskassign
64	Can view task assign	16	view_taskassign
65	Can add memo	17	add_memo
66	Can change memo	17	change_memo
67	Can delete memo	17	delete_memo
68	Can view memo	17	view_memo
69	Can add task manage	18	add_taskmanage
70	Can change task manage	18	change_taskmanage
71	Can delete task manage	18	delete_taskmanage
72	Can view task manage	18	view_taskmanage
\.


--
-- Data for Name: core_alarm; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_alarm (id, message, created_at, is_active, url_link, user_id) FROM stdin;
1	안녕하세요, 신진슬님.\n마감일이 지난 태스크: LLM 기본 개념 및 역사 이해, 개발 환경 설정 및 필수 도구 설치, LLM 관련 주요 논문 및 자료 리뷰\n내일 마감인 태스크: LLM 관련 주요 논문 및 자료 리뷰\n마감일을 놓치지 않도록 확인해 주세요.	2025-07-28 20:50:04.426174+09	t	\N	15
2	안녕하세요, 신진슬님.\n마감일이 지난 태스크: LLM 기본 개념 및 역사 이해, 개발 환경 설정 및 필수 도구 설치, LLM 관련 주요 논문 및 자료 리뷰\n내일 마감인 태스크: LLM 관련 주요 논문 및 자료 리뷰\n마감일을 놓치지 않도록 확인해 주세요.	2025-07-28 20:50:04.937282+09	t	\N	15
\.


--
-- Data for Name: core_chatmessage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_chatmessage (message_id, message_type, message_text, create_time, is_active, session_id) FROM stdin;
\.


--
-- Data for Name: core_chatsession; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_chatsession (session_id, summary, is_active, user_id) FROM stdin;
\.


--
-- Data for Name: core_company; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_company (company_id, company_name) FROM stdin;
111-11-11111	EZFLOW
\.


--
-- Data for Name: core_curriculum; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_curriculum (curriculum_id, curriculum_description, curriculum_title, common, total_weeks, week_schedule, department_id) FROM stdin;
1	설명: LLM 개발 신입사원을 위한 4주차 온보딩 프로그램\n\n직무: LLM 개발\n주차: 4주차\n목적: LLM 개발 신입사원 교육을 위한 온보딩 교육	LLM 개발 신입사원 온보딩 프로그램	f	4	1주차: LLM 기본 이해 및 환경 설정\n- LLM의 기본 개념 및 작동 원리 학습\n- 개발 환경 설정 및 필수 도구 설치\n- 팀 소개 및 조직 구조 이해\n\n2주차: 데이터 수집 및 전처리\n- 데이터 수집 방법 및 윤리적 고려사항 학습\n- 데이터 전처리 기법 및 도구 실습\n- 데이터 품질 평가 및 개선 방법 이해\n\n3주차: 모델 개발 및 훈련\n- LLM 모델 구조 및 훈련 기법 학습\n- 모델 훈련 실습 및 하이퍼파라미터 튜닝\n- 성능 평가 및 개선 방법 이해\n\n4주차: 배포 및 유지보수\n- 모델 배포 전략 및 도구 학습\n- 실시간 모니터링 및 성능 최적화 방법 이해\n- 유지보수 및 업데이트 절차 학습	6
\.


--
-- Data for Name: core_department; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_department (department_id, department_name, description, is_active, company_id) FROM stdin;
1	LLM 개발	LLM 개발 부서입니다.	t	111-11-11111
2	페르소나		t	111-11-11111
3	김앤현		t	111-11-11111
4	연구개발		t	111-11-11111
5	펜타스틱		t	111-11-11111
6	EZFLOW		t	111-11-11111
7	오브코스		t	111-11-11111
\.


--
-- Data for Name: core_docs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_docs (docs_id, title, description, file_path, create_time, common_doc, original_file_name, department_id) FROM stdin;
\.


--
-- Data for Name: core_emailconfig; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_emailconfig (id, email, password, name) FROM stdin;
1	sinipezflow@gmail.com	jgdy jiwk fvez knvz	알림봇
\.


--
-- Data for Name: core_memo; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_memo (memo_id, create_date, comment, user_id, task_assign_id) FROM stdin;
\.


--
-- Data for Name: core_mentorship; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_mentorship (mentorship_id, mentor_id, mentee_id, start_date, end_date, is_active, curriculum_title, total_weeks, report, url_link) FROM stdin;
1	9	15	2025-07-16	2025-08-12	t	LLM 개발 신입사원 온보딩 프로그램	4	\N	\N
2	9	15	2025-07-28	2025-08-24	t	LLM 개발 신입사원 온보딩 프로그램	4	\N	\N
\.


--
-- Data for Name: core_taskassign; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_taskassign (task_assign_id, title, description, guideline, week, scheduled_start_date, scheduled_end_date, real_start_date, real_end_date, status, priority, "order", mentorship_id_id, parent_id) FROM stdin;
1	LLM 기본 개념 및 역사 이해	1) 배운 점:\n2) 이해가 어려웠던 부분:\n3) 추가로 궁금한 점:	LLM의 기본 개념과 발전 과정을 학습하고, 주요 용어와 기술을 이해합니다.	1	2025-07-16	2025-07-18	\N	\N	진행전	상	1	1	\N
2	개발 환경 설정 및 필수 도구 설치	1) 설치한 도구 목록:\n2) 설치 과정에서의 어려움:\n3) 해결 방법:	LLM 개발에 필요한 소프트웨어 및 도구를 설치하고 설정합니다.	1	2025-07-16	2025-07-18	\N	\N	진행전	상	2	1	\N
3	LLM 관련 주요 논문 및 자료 리뷰	1) 읽은 논문/자료 제목:\n2) 핵심 내용 요약:\n3) 인상 깊었던 점:	주요 논문과 자료를 읽고, 핵심 내용을 요약합니다.	1	2025-07-16	2025-07-17	\N	\N	진행전	중	3	1	\N
4	데이터 수집 및 전처리 방법 학습	1) 배운 점:\n2) 개선할 점:\n3) 사용한 도구 및 라이브러리:	다양한 데이터 소스에서 데이터를 수집하고, 전처리 과정을 통해 데이터를 정제하는 방법을 학습합니다.	2	2025-07-23	2025-07-26	\N	\N	진행전	상	1	1	\N
5	모델 학습을 위한 데이터셋 준비	1) 데이터셋 준비 과정:\n2) 데이터셋 품질 평가:\n3) 개선할 점:	모델 학습에 적합한 데이터셋을 준비하고, 데이터셋의 품질을 평가합니다.	2	2025-07-23	2025-07-25	\N	\N	진행전	상	2	1	\N
6	기본 모델 학습 및 결과 분석	1) 모델 학습 과정:\n2) 결과 분석:\n3) 성능 평가 및 개선 방안:	기본 모델을 학습시키고, 결과를 분석하여 모델의 성능을 평가합니다.	2	2025-07-23	2025-07-25	\N	\N	진행전	중	3	1	\N
7	하이퍼파라미터 튜닝 기법 학습	1) 배운 점:\n2) 개선할 점:\n3) 추가로 궁금한 점:	하이퍼파라미터 튜닝의 기본 개념을 이해하고 다양한 기법을 학습합니다.	3	2025-07-30	2025-08-01	\N	\N	진행전	상	1	1	\N
8	성능 평가 및 개선 방법 이해	1) 배운 점:\n2) 개선할 점:\n3) 적용해보고 싶은 방법:	모델의 성능을 평가하는 방법을 배우고, 개선할 수 있는 전략을 탐구합니다.	3	2025-07-30	2025-08-01	\N	\N	진행전	상	2	1	\N
9	모델 디버깅 및 오류 해결 방법 실습	1) 배운 점:\n2) 해결한 오류:\n3) 추가로 시도해보고 싶은 방법:	모델 디버깅의 중요성을 이해하고, 실제 오류를 해결하는 방법을 실습합니다.	3	2025-07-30	2025-08-02	\N	\N	진행전	상	3	1	\N
10	팀별 프로젝트 주제 선정	1) 선정한 주제:\n2) 주제 선정 이유:\n3) 프로젝트 목표:	팀원들과 협력하여 프로젝트 주제를 선정하고 목표를 설정하세요.	4	2025-08-06	2025-08-07	\N	\N	진행전	상	1	1	\N
11	프로젝트 계획 수립	1) 주요 작업 목록:\n2) 작업 일정:\n3) 역할 분담:	프로젝트 진행을 위한 세부 계획을 수립하세요.	4	2025-08-06	2025-08-07	\N	\N	진행전	상	2	1	\N
12	프로젝트 결과 발표 준비	1) 발표 자료 개요:\n2) 주요 성과:\n3) 발표 전략:	프로젝트 결과를 발표할 자료를 준비하세요.	4	2025-08-06	2025-08-07	\N	\N	진행전	중	3	1	\N
13	향후 개발 계획 및 개인 목표 설정	1) 향후 개발 계획:\n2) 개인 목표:\n3) 목표 달성을 위한 전략:	향후 개발 계획을 수립하고 개인 목표를 설정하세요.	4	2025-08-06	2025-08-07	\N	\N	진행전	중	4	1	\N
19	기본 모델 학습 및 결과 분석	1) 모델 학습 과정:\nHugging Face의 transformers 라이브러리를 사용해 사전 학습된 BERT 기반 분류 모델을 로드하고 파인튜닝을 진행했습니다.\n준비한 데이터셋(Train/Validation/Test)을 토크나이저로 전처리한 뒤, Trainer API를 사용하여 3 epoch 동안 학습을 진행했습니다.\n학습 과정에서 GPU를 활용해 학습 시간을 단축했으며, learning rate와 batch size를 조정해 안정적인 학습 곡선을 얻으려고 시도했습니다.\n\n\n2) 결과 분석:\nValidation 데이터셋에서 모델이 예측한 라벨과 실제 라벨을 비교하여 Accuracy, Precision, Recall, F1-score를 측정했습니다.\nConfusion Matrix를 시각화해 잘못 예측한 클래스의 비율과 원인을 분석했습니다.\n일부 오분류 사례를 직접 확인한 결과, 데이터셋의 문장 길이 편차나 불균형이 성능 저하의 원인이 될 수 있다는 점을 발견했습니다.\n\n3) 성능 평가 및 개선 방안:\n현재 모델은 Validation Accuracy 약 85% 수준으로 준수했지만, 특정 클래스에서 Recall이 낮아 개선이 필요했습니다.\n\n개선 방안:\n데이터 증강(Text Augmentation) 기법을 적용해 데이터 다양성을 확보.\n하이퍼파라미터 튜닝(Grid Search, Learning Rate Scheduler 등)을 통해 최적값을 탐색.\nRoBERTa, DistilBERT 등 다른 Transformer 모델로 실험해 성능 비교.\n불균형 데이터 문제를 해결하기 위해 클래스 가중치 조정 또는 Oversampling을 시도.\n\n	기본 모델을 학습시키고, 결과를 분석하여 모델의 성능을 평가합니다.	2	2025-08-04	2025-08-06	\N	\N	진행전	중	3	2	\N
23	팀별 프로젝트 주제 선정	1) 선정한 주제:\nRAG 기반 온보딩 시스템(SiniP)\n신입사원 교육 과정을하고, LLM과 RAG 기술을 활용하여 맞춤형 온보딩 퀘스트와 실시간 피드백을 제공하는 플랫폼.\n\n2) 주제 선정 이유:\n기존 온보딩 과정의 비효율성과 높은 교육 비용 문제를 해결할 수 있는 실용적인 솔루션이라고 판단했습니다.\nLLM과 RAG를 활용하면 대규모 데이터를 기반으로 실시간 질문 응답과 맞춤형 퀘스트 제공이 가능하여 신입사원의 몰입도와 학습 효율을 높일 수 있습니다.\n\n3) 프로젝트 목표:\n신입사원의 교육 및 적응 과정을 LLM 기반의 지능형 에이전트로 자동화\n 온보딩 데이터를 기반으로 직원의 성장 속도와 적응도에 대한 분석 리포트 생성	팀원들과 협력하여 프로젝트 주제를 선정하고 목표를 설정하세요.	4	2025-08-18	2025-08-19	\N	\N	진행전	상	1	2	\N
27	데이터 수집 기본 이해	1)웹 스크래핑, API 호출, CSV/Excel 파일 등 주요 데이터 수집 경로 파악:\nBeautifulSoup와 Selenium을 활용해 간단한 웹 페이지에서 텍스트 데이터를 추출하는 실습을 진행했습니다.\n공공데이터포털 API를 호출하여 JSON 형식의 데이터를 수집하고, requests 라이브러리로 API 응답을 처리하는 방법을 배웠습니다.\n\n2)공공 데이터 포털, Kaggle 등 데이터셋 활용 사례 조사:\n공공데이터포털에서 기상청 날씨 데이터를 다운로드하고, 이를 간단히 분석해보았습니다.\nKaggle에서 ‘타이타닉 생존자 예측’ 데이터셋을 예제로 사용하여 데이터 구조와 컬럼을 분석했습니다.\n\n3)데이터 수집 시 주의사항(저작권, 품질 등) 정리:\n데이터 수집 전 저작권과 라이선스를 확인하는 것이 중요하다는 점을 학습했습니다.\n웹 스크래핑 시 robots.txt를 준수하고, API 호출 시 Rate Limit을 고려해야 한다는 점을 알게 되었습니다.	다양한 데이터 소스(웹, API, 공공데이터 등)의 특징과 수집 방법을 학습하세요.	2	2025-08-04	2025-08-07	\N	\N	진행전	상	\N	2	17
28	수집 데이터 탐색 및 품질 점검	1)데이터 형태(정형/비정형), 컬럼 및 데이터 타입 확인:\n수집한 데이터셋을 pandas.DataFrame 형태로 불러와 .info()와 .head()를 통해 데이터 구조와 컬럼 정보를 확인했습니다.\n데이터 타입(int, float, object 등)을 검토하여 수치형과 범주형 컬럼을 구분하고, 분석에 적합한 타입으로 변환하는 실습을 진행했습니다.\n\n2)결측값, 중복 데이터, 이상치 탐지 방법 실습:\n.isnull().sum()으로 컬럼별 결측값 수를 확인하고, 평균 대체(fillna)와 결측행 제거(dropna)를 실습했습니다.\n.duplicated()로 중복 데이터를 찾아내고, 필요 시 .drop_duplicates()를 통해 제거했습니다.\n\n3)품질 저하 요소(오타, 비일관성 등) 파악 및 메모:\n텍스트 컬럼에서 불필요한 공백, 오타, 대소문자 불일치 등을 확인하고 str.lower(), strip(), replace() 등을 사용해 정제했습니다.\n카테고리 데이터에서 중복된 표현(예: ‘Seoul’ vs ‘SEOUL’)을 통일하여 데이터 품질을 높였습니다.\n전체적으로 데이터 품질이 분석 결과에 큰 영향을 준다는 점을 깨닫고, 주요 이슈들을 메모로 정리했습니다.	수집된 데이터의 구조와 품질을 확인하고, 이상치나 결측값을 탐색하세요.	2	2025-08-04	2025-08-07	\N	\N	진행전	상	\N	2	17
29	데이터 전처리 실습	1)결측값 처리(삭제, 평균 대체 등) 및 중복 제거:\n웹 스크래핑(BeautifulSoup, Selenium)과 API 호출 방식의 차이를 이해하고, JSON·CSV 데이터 구조를 직접 불러오는 과정을 실습했습니다.\n수집된 데이터를 전처리하기 위해 결측값 처리, 중복 제거, 이상치 탐지 등 필수적인 데이터 클리닝 절차를 배웠습니다.\n\n2)범주형 데이터 인코딩, 정규화/표준화 적용:\n다양한 데이터 소스(API, 웹, 크롤링 등)에서 데이터를 효율적으로 수집하는 자동화 스크립트 작성 능력이 부족하다고 느꼈습니다.\n전처리 과정에서 특정 상황(예: 문자열 인코딩 문제, 다중 결측치 처리)에 대한 대처 능력을 더 강화할 필요가 있습니다.\n\n3)전처리 후 데이터셋 저장 및 버전 관리 방법 기록:\n대용량 데이터(수백 MB~GB 단위) 전처리를 위한 최적화 방법과 효율적인 파이프라인 설계 기법을 알아보았습니다.\n실시간 데이터 스트리밍(API, Kafka 등) 환경에서 수집 및 전처리 자동화를 구현하는 방법을 학습했습니다.	데이터 분석 및 모델링을 위한 전처리 기법을 실습하세요.	2	2025-08-04	2025-08-07	\N	\N	진행전	상	\N	2	17
17	데이터 수집 및 전처리 방법 학습	1) 배운 점:\n웹 스크래핑(BeautifulSoup, Selenium)과 API 호출 방식을 비교해 보고, 실제로 JSON·CSV 데이터를 불러오는 실습을 해보며 데이터 수집 과정을 익혔습니다.\n공공데이터포털과 Kaggle에서 데이터를 다운로드해 구조와 컬럼을 분석하면서 다양한 데이터 소스 활용 방법을 배웠습니다.\npandas를 활용해 결측값, 중복값, 이상치를 탐지하고 처리하는 방법을 실습하며 데이터 품질 관리의 중요성을 느꼈습니다.\n범주형 데이터 인코딩과 수치 데이터 정규화/표준화를 직접 적용해 보면서 전처리의 효과를 이해했습니다.\n\n2) 개선할 점:\n웹 스크래핑 및 API 호출을 자동화하는 스크립트 작성 능력이 아직 부족하다고 느꼈습니다.\n전처리 과정에서 인코딩 문제나 특수 문자 처리 같은 예외 상황을 다루는 능력을 더 보완할 필요가 있습니다.\nEDA(탐색적 데이터 분석)를 통한 데이터 시각화와 패턴 파악 과정을 더 깊게 연습해야겠다고 생각했습니다.\n\n3) 추가로 알고 싶은 내용:\n대용량 데이터셋(수백 MB 이상)을 효율적으로 처리하는 최적화된 전처리 기법과 파이프라인 구성 방법.\n실시간 데이터 수집 환경(API, Kafka 등)에서 전처리를 자동화하는 방법.\n머신러닝 모델에 적합한 형태로 데이터를 변환하기 위한 고급 전처리와 피처 엔지니어링 기법.\n\n	다양한 데이터 소스에서 데이터를 수집하고, 전처리 과정을 통해 데이터를 정제하는 방법을 학습합니다.	2	2025-08-04	2025-08-07	\N	\N	진행전	상	1	2	\N
14	LLM 기본 개념 및 역사 이해	1) 배운 점:\nLLM(Large Language Model)이란 방대한 양의 텍스트 데이터를 학습해 인간과 유사한 자연어 이해와 생성 능력을 가진 AI 모델임을 알게 되었습니다.\nGPT, BERT, LLaMA 등의 대표적인 LLM 아키텍처와, Transformer 구조(Self-Attention 메커니즘)의 중요성을 학습했습니다.\nLLM 발전 과정에서 RNN → LSTM → Transformer로 이어지는 자연어 처리 기술의 진화 흐름과, 대규모 데이터 및 GPU 연산이 모델 성능 향상에 중요한 역할을 했음을 이해했습니다.\n\n2) 이해가 어려웠던 부분:\nTransformer의 **Self-Attention 연산 과정(쿼리, 키, 밸류 계산)**이 처음에는 직관적으로 이해하기 어려웠습니다.\nPre-training과 Fine-tuning 과정에서 사용하는 손실 함수 및 파라미터 업데이트 과정이 복잡하게 느껴졌습니다.\nLLM이 문맥을 이해하고 다음 단어를 예측하는 원리(확률 기반 토큰 예측)가 수식 중심으로 설명될 때 조금 난해했습니다.\n\n\n3) 추가로 궁금한 점:\nLLM이 수백억 개 이상의 파라미터를 가진 초거대 모델일 때, 실제로 메모리나 연산 효율성을 어떻게 확보하는지 궁금합니다.\nLLM이 최신 정보(실시간 데이터)를 반영하기 위해 RAG(검색 증강 생성)나 지속적인 학습을 어떻게 활용하는지 알고 싶습니다.\nLLM의 편향성(Bias) 문제와 이를 최소화하기 위한 기술적 접근 방법(예: RLHF, 데이터 정제)이 어떤 방식으로 구현되는지 더 깊이 학습하고 싶습니다.\n\n	LLM의 기본 개념과 발전 과정을 학습하고, 주요 용어와 기술을 이해합니다.	1	2025-07-28	2025-07-30	\N	\N	진행전	상	1	2	\N
15	개발 환경 설정 및 필수 도구 설치	1) 설치한 도구 목록:\nPython 3.10 환경: LLM 개발에 필요한 패키지 설치를 위해 Anaconda 가상환경을 만들고 Python 버전을 설정했습니다.\n필수 라이브러리: transformers, datasets, torch, accelerate, langchain 등을 설치했습니다.\n개발 툴: Visual Studio Code(VSCode), Jupyter Notebook, Git 및 GitHub Desktop을 설치해 협업과 버전 관리를 준비했습니다.\n\n\n2) 설치 과정에서의 어려움:\nWindows 환경에서 CUDA 버전과 PyTorch 버전이 호환되지 않아 설치가 실패하는 문제가 있었습니다.\n일부 라이브러리(예: transformers)가 Python 기본 환경에 충돌을 일으켜 패키지 의존성 문제가 발생했습니다.\nJupyter Notebook이 새로 만든 가상환경을 인식하지 못하는 문제가 있었습니다.\n\n3) 해결 방법:\nPyTorch 공식 사이트에서 CUDA 버전 호환표를 참고해 정확한 버전을 재설치했습니다.\npip 대신 conda install을 활용하거나, pip install --upgrade 옵션으로 패키지 버전을 조정해 의존성 충돌을 해결했습니다.\nipykernel을 가상환경에 설치하고 python -m ipykernel install --user --name <env_name> 명령으로 Jupyter 커널을 추가했습니다.\n\n	LLM 개발에 필요한 소프트웨어 및 도구를 설치하고 설정합니다.	1	2025-07-28	2025-07-30	\N	\N	진행전	상	2	2	\N
16	LLM 관련 주요 논문 및 자료 리뷰	1) 읽은 논문/자료 제목:\nAttention Is All You Need (Vaswani et al., 2017)\nLanguage Models are Few-Shot Learners (Brown et al., 2020)\nHugging Face Transformers 공식 문서 및 튜토리얼\n\n2) 핵심 내용 요약:\nAttention Is All You Need:\n기존 RNN과 LSTM의 한계를 극복하기 위해 Transformer 모델이 등장했으며, Self-Attention 메커니즘을 기반으로 병렬 연산이 가능해져 학습 속도와 성능이 크게 향상됨을 알게 되었습니다.\nPosition Encoding을 통해 순서 정보를 보완하는 방법이 흥미로웠습니다.\n\nLanguage Models are Few-Shot Learners:\nGPT-3의 Few-Shot, Zero-Shot, One-Shot 학습 능력을 다양한 벤치마크 실험을 통해 보여주었고, 사전 학습(Pre-training)의 중요성을 강조하고 있음을 확인했습니다.\n\nHugging Face 문서:\ntransformers 라이브러리의 다양한 모델 로딩, 파인튜닝 예제를 통해 실무에서 LLM을 쉽게 활용하는 방법을 배웠습니다.\n\n3) 인상 깊었던 점:\nTransformer 모델이 단순히 Attention 구조만으로 RNN 계열 모델들을 완전히 대체하고 NLP 분야의 패러다임을 바꿨다는 점이 인상 깊었습니다.\nGPT-3 논문에서 보여준 Few-Shot Learning의 성능은 사전 학습된 대규모 모델의 잠재력을 잘 보여줬고, 앞으로 LLM 기술이 더욱 발전할 가능성을 느꼈습니다.\nHugging Face 생태계가 LLM을 실무에 적용하는 진입 장벽을 크게 낮춰준다는 점이 유용하게 다가왔습니다.\n\n	주요 논문과 자료를 읽고, 핵심 내용을 요약합니다.	1	2025-07-28	2025-07-29	\N	\N	진행전	중	3	2	\N
18	모델 학습을 위한 데이터셋 준비	1) 데이터셋 준비 과정:\n공공 데이터 포털과 Kaggle에서 텍스트 데이터셋을 수집하고, 중복된 데이터와 불필요한 특수 문자를 제거했습니다.\npandas를 활용하여 결측값을 처리하고, 데이터의 컬럼 구조를 학습에 적합하게 변환했습니다.\n데이터셋을 학습용(Train), 검증용(Validation), 테스트용(Test)으로 8:1:1 비율로 분할하여 관리했습니다.\n텍스트 데이터를 모델 입력에 맞게 토큰화(BPE 기반 토크나이저)하고 길이 제한을 맞췄습니다.\n\n2) 데이터셋 품질 평가:\n데이터의 대표성(도메인 적합성), 다양성(어휘 분포), 노이즈(오타, 비정상 문장 비율)를 기준으로 평가했습니다.\n토큰화 후 문장 길이 분포를 확인하고, 불필요하게 짧거나 긴 샘플을 필터링했습니다.\n데이터셋 일부를 샘플링해 수동으로 검수하여 품질을 확인했습니다.\n\n\n3) 개선할 점:\n특정 카테고리(예: 감정 데이터의 부정 표현) 샘플 수가 부족하여 데이터 불균형 문제가 있음을 발견했습니다.\n노이즈가 많은 데이터는 정규표현식과 사전 필터링 규칙을 더 세밀하게 적용할 필요가 있습니다.\n도메인 특화 데이터셋을 추가로 확보해 모델의 성능을 높일 계획입니다.\n\n	모델 학습에 적합한 데이터셋을 준비하고, 데이터셋의 품질을 평가합니다.	2	2025-08-04	2025-08-06	\N	\N	진행전	상	2	2	\N
20	하이퍼파라미터 튜닝 기법 학습	1) 배운 점:\n하이퍼파라미터가 모델 성능에 큰 영향을 미친다는 점을 다시 확인했습니다. (예: Learning Rate, Batch Size, Epoch 수 등)\nGrid Search, Random Search, Bayesian Optimization과 같은 튜닝 방법의 차이를 배웠습니다.\nGrid Search는 모든 조합을 탐색해 최적 값을 찾지만 연산 비용이 큼.\nRandom Search는 랜덤 샘플링으로 연산 효율이 높음.\nBayesian Optimization은 이전 결과를 기반으로 더 나은 파라미터 후보를 탐색함.\n\n2) 개선할 점:\n다양한 하이퍼파라미터가 동시에 변할 때 성능 변화를 체계적으로 비교하기 어려웠습니다.\n파라미터 튜닝을 자동화하지 못하고 수동으로 실험하다 보니 실험 로그 관리가 부족했습니다.\nGPU 메모리 제한 때문에 Batch Size를 자유롭게 조절하기 어려웠습니다.\n\n\n3) 추가로 궁금한 점:\n실제 산업 환경에서 하이퍼파라미터 튜닝을 자동화하기 위해 사용하는 도구(예: Optuna, Ray Tune)의 활용법이 궁금합니다.\nLLM 파인튜닝에서 중요한 파라미터(예: LoRA 랭크, 학습률 스케줄링)는 어떻게 최적화하는지 더 배우고 싶습니다.\nAutoML(Auto Hyperparameter Tuning) 방식과 Bayesian Optimization을 결합했을 때 성능 차이가 있는지 궁금합니다.\n\n	하이퍼파라미터 튜닝의 기본 개념을 이해하고 다양한 기법을 학습합니다.	3	2025-08-11	2025-08-13	\N	\N	진행전	상	1	2	\N
21	성능 평가 및 개선 방법 이해	1) 배운 점:\nAccuracy, Precision, Recall, F1-score 등 다양한 지표의 특성과 활용 목적을 이해했습니다.\nConfusion Matrix를 통해 모델의 오분류 패턴을 확인하고 문제 영역을 파악하는 방법을 배웠습니다.\nROC Curve와 AUC를 활용하면 모델의 분류 한계와 민감도를 비교 분석할 수 있음을 알게 되었습니다.\n성능 향상에는 데이터 품질 관리, 하이퍼파라미터 최적화, 앙상블 기법 등 다양한 접근법이 필요하다는 것을 배웠습니다.\n\n2) 개선할 점:\n평가 지표를 단순 Accuracy 중심으로 해석하는 습관이 있어, 다양한 지표를 종합적으로 분석하는 연습이 더 필요합니다.\n모델의 잘못된 예측 사례(오분류 데이터)를 충분히 분석하지 못해 원인 파악이 미흡했습니다.\n실험 로그(성능 기록)를 체계적으로 관리하지 않아, 파라미터 변경 시 어떤 요소가 성능 개선에 영향을 주었는지 명확히 추적하기 어려웠습니다.\n\n3) 적용해보고 싶은 방법:\nConfusion Matrix 기반으로 오분류 데이터만 따로 분석하여 데이터 보강(Data Augmentation) 시도를 해보고 싶습니다.\n하이퍼파라미터 튜닝을 위한 자동화 도구(Optuna, GridSearchCV 등)를 적용하여 성능 개선 정도를 비교하고 싶습니다.	모델의 성능을 평가하는 방법을 배우고, 개선할 수 있는 전략을 탐구합니다.	3	2025-08-11	2025-08-13	\N	\N	진행전	상	2	2	\N
22	모델 디버깅 및 오류 해결 방법 실습	1) 배운 점:\n모델 학습 중 발생하는 오류는 데이터 전처리 문제, 파라미터 설정 오류, 라이브러리 버전 호환성 문제 등 다양한 원인에서 비롯될 수 있다는 것을 배웠습니다.\ntry-except 구문을 활용한 예외 처리와 logging 모듈을 사용해 오류 원인을 추적하는 방법을 실습했습니다.\n학습 중간에 손실 값(loss)이 NaN으로 변하는 경우, 학습률(learning rate)을 낮추거나 입력 데이터의 정규화를 점검해야 한다는 점을 알게 되었습니다.\n\n2) 해결한 오류:\n데이터 차원 불일치 오류: 입력 데이터의 shape이 모델의 예상과 맞지 않아 RuntimeError: size mismatch가 발생했는데, 데이터 로더에서 텐서 차원을 맞춰 해결했습니다.\nCUDA 메모리 부족 문제: Batch Size를 줄이고 torch.cuda.empty_cache()를 실행해 메모리를 확보한 뒤 학습을 재개했습니다.\n\n3) 추가로 시도해보고 싶은 방법:\npdb나 ipdb 디버거를 활용하여 모델 내부 레이어의 출력을 단계별로 확인하고 싶습니다.\n모델 학습 과정을 시각화하는 도구(TensorBoard, Weights & Biases)를 사용해 에러 발생 지점을 더 직관적으로 파악해 보고 싶습니다.\n\n	모델 디버깅의 중요성을 이해하고, 실제 오류를 해결하는 방법을 실습합니다.	3	2025-08-11	2025-08-14	\N	\N	진행전	상	3	2	\N
24	프로젝트 계획 수립	1) 주요 작업 목록:\n요구사항 분석 및 기획: 프로젝트 목표 정의, 핵심 기능 선정, 기술 스택 확정.\n데이터 수집 및 전처리: 온보딩 관련 문서, FAQ 데이터, HR 규정 등 RAG 학습용 데이터 준비.\n백엔드 개발: FastAPI와 Django를 기반으로 한 API 서버 구축 및 데이터베이스 설계(PostgreSQL).\nLLM/RAG 연동: LangChain과 Qdrant를 이용해 문서 검색 및 QA 챗봇 구현.\n프론트엔드/UX 설계: 온보딩 UI(퀘스트 시스템, 대시보드 등) 개발.\n테스트 및 디버깅: 기능별 단위 테스트 및 사용자 피드백 반영.\n배포 및 문서화: AWS EC2 환경에서 서비스 배포, 기술 문서 및 발표 자료 작성.\n\n2) 작업 일정:\n1주차: 프로젝트 기획 완료 및 요구사항 명세서 작성.\n2주차: 데이터 수집 및 전처리, 백엔드 초기 구조 개발.\n3주차: LLM/RAG 연동 및 챗봇 MVP 개발.\n4주차: 프론트엔드 UI/UX 설계 및 API 연동.\n5주차: 통합 테스트, 성능 최적화, 피드백 반영.\n6주차: 최종 배포 및 발표 준비.\n\n3) 역할 분담:\nPM(성호진): 프로젝트 전체 일정 관리 및 요구사항 조율.\n백엔드(신진슬,이민정): FastAPI, Django, DB 설계 및 API 개발.\n프론트엔드(방성일): UI/UX 디자인 및 프론트 구현.\nAI/데이터(배정수): LLM 모델 연동, RAG 구축, 데이터 전처리 및 평가.\n테스트/문서화(팀원 전체): 통합 테스트, 최종 발표 자료 및 보고서 작성.\n\n	프로젝트 진행을 위한 세부 계획을 수립하세요.	4	2025-08-18	2025-08-19	\N	\N	진행전	상	2	2	\N
25	프로젝트 결과 발표 준비	1) 발표 자료 개요:\n프로젝트 개요: 프로젝트 목표, 문제 정의, 개발 동기 및 필요성 소개.\n시스템 아키텍처: LLM + RAG 기반 구조, 사용한 기술 스택(FastAPI, Qdrant, LangChain 등) 설명.\n주요 기능: 게온보딩 퀘스트 시스템, 실시간 Q&A 챗봇, 관리자 대시보드 소개.\n데모 영상 및 시연: 프로그램 동작 과정 시연(신입사원 온보딩 흐름).\n성과 및 기대효과: 온보딩 기간 단축 효과, HR 업무 효율화, 팀 협업 결과.\n향후 개선방향: 기능 확장 및 서비스 안정화 계획.\n\n2) 주요 성과:\nRAG 기반 온보딩 Q&A 챗봇을 완성하여 실시간 질의응답 기능을 구현했습니다.\n퀘스트 기반 UI를 통해 신입사원 교육 과정을 제작하여 사용자 몰입도를 높였습니다.\nAWS EC2 환경에서 프로젝트 배포까지 완료하여 실제 서비스 가능한 형태로 제공했습니다.\n팀원 간 협업을 통해 데이터 수집-모델링-프론트/백엔드 개발-배포까지 전 과정을 경험했습니다.\n\n3) 발표 전략:\n스토리텔링 중심 발표: 신입사원의 실제 온보딩 문제 상황을 사례로 시작해 공감대 형성.\n시각자료 활용: 아키텍처 다이어그램, UI 스크린샷, 간단한 시연 영상 포함.\n성과 강조: 문제 해결 효과와 프로젝트 가치(시간 단축, 비용 절감 등)를 데이터와 함께 설명.\n팀워크 강조: 각 팀원의 역할과 기여도를 짧게 소개하고 협업 경험을 공유.\nQ&A 대비: 예상 질문(LLM 비용, 데이터 보안, 확장 가능성)에 대한 답변 준비.\n\n	프로젝트 결과를 발표할 자료를 준비하세요.	4	2025-08-18	2025-08-19	\N	\N	진행전	중	3	2	\N
26	향후 개발 계획 및 개인 목표 설정	1) 향후 개발 계획:\n기능 고도화: 현재 MVP 수준의 기능(온보딩 퀘스트 관리, RAG 기반 챗봇)을 보완하여 실무 적용 가능한 수준으로 개선할 계획입니다.\n성능 최적화: RAG 검색 속도 및 LLM 응답 정확도를 높이기 위해 벡터DB 인덱스 구조를 개선하고, 프롬프트 최적화 및 캐싱 전략을 도입할 예정입니다.\n테스트 자동화: 단위 테스트 및 통합 테스트 자동화 파이프라인을 구축하여 배포 안정성을 확보할 계획입니다.\n추가 기능 구현: 관리자 분석 리포트, 온보딩 데이터 시각화, 멘토링 피드백 자동 생성 기능을 개발할 예정입니다.\n\n2) 개인 목표:\nLLM과 RAG 기술을 더 깊게 학습하여 LLM 기반 서비스 개발 전문가로 성장하고 싶습니다.\n오픈소스 프로젝트(예: Hugging Face, LangChain)에 기여하거나, 기술 블로그를 통해 학습 경험을 공유할 계획입니다.\n프로젝트 관리 능력을 키워, 단순 개발뿐만 아니라 팀 리딩과 기획 역량을 함께 발전시키고 싶습니다.\n\n3) 목표 달성을 위한 전략:\n매주 기술 학습 목표를 세워 LLM, 벡터DB, 프롬프트 엔지니어링 관련 튜토리얼과 논문을 꾸준히 공부합니다.\n개인 GitHub에 학습한 예제 및 미니 프로젝트를 정리하여 포트폴리오를 강화합니다.\n온라인 세미나나 AI 스터디 모임에 참여하여 최신 기술 동향을 파악하고 실무 적용 사례를 배우려고 합니다.	향후 개발 계획을 수립하고 개인 목표를 설정하세요.	4	2025-08-18	2025-08-19	\N	\N	진행전	중	4	2	\N
\.


--
-- Data for Name: core_taskmanage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_taskmanage (task_manage_id, title, description, guideline, week, "order", period, priority, curriculum_id) FROM stdin;
1	LLM 기본 개념 및 역사 이해	1) 배운 점:\n2) 이해가 어려웠던 부분:\n3) 추가로 궁금한 점:	LLM의 기본 개념과 발전 과정을 학습하고, 주요 용어와 기술을 이해합니다.	1	1	2	상	1
2	개발 환경 설정 및 필수 도구 설치	1) 설치한 도구 목록:\n2) 설치 과정에서의 어려움:\n3) 해결 방법:	LLM 개발에 필요한 소프트웨어 및 도구를 설치하고 설정합니다.	1	2	2	상	1
3	LLM 관련 주요 논문 및 자료 리뷰	1) 읽은 논문/자료 제목:\n2) 핵심 내용 요약:\n3) 인상 깊었던 점:	주요 논문과 자료를 읽고, 핵심 내용을 요약합니다.	1	3	1	중	1
4	데이터 수집 및 전처리 방법 학습	1) 배운 점:\n2) 개선할 점:\n3) 사용한 도구 및 라이브러리:	다양한 데이터 소스에서 데이터를 수집하고, 전처리 과정을 통해 데이터를 정제하는 방법을 학습합니다.	2	1	3	상	1
5	모델 학습을 위한 데이터셋 준비	1) 데이터셋 준비 과정:\n2) 데이터셋 품질 평가:\n3) 개선할 점:	모델 학습에 적합한 데이터셋을 준비하고, 데이터셋의 품질을 평가합니다.	2	2	2	상	1
6	기본 모델 학습 및 결과 분석	1) 모델 학습 과정:\n2) 결과 분석:\n3) 성능 평가 및 개선 방안:	기본 모델을 학습시키고, 결과를 분석하여 모델의 성능을 평가합니다.	2	3	2	중	1
7	하이퍼파라미터 튜닝 기법 학습	1) 배운 점:\n2) 개선할 점:\n3) 추가로 궁금한 점:	하이퍼파라미터 튜닝의 기본 개념을 이해하고 다양한 기법을 학습합니다.	3	1	2	상	1
8	성능 평가 및 개선 방법 이해	1) 배운 점:\n2) 개선할 점:\n3) 적용해보고 싶은 방법:	모델의 성능을 평가하는 방법을 배우고, 개선할 수 있는 전략을 탐구합니다.	3	2	2	상	1
9	모델 디버깅 및 오류 해결 방법 실습	1) 배운 점:\n2) 해결한 오류:\n3) 추가로 시도해보고 싶은 방법:	모델 디버깅의 중요성을 이해하고, 실제 오류를 해결하는 방법을 실습합니다.	3	3	3	상	1
10	팀별 프로젝트 주제 선정	1) 선정한 주제:\n2) 주제 선정 이유:\n3) 프로젝트 목표:	팀원들과 협력하여 프로젝트 주제를 선정하고 목표를 설정하세요.	4	1	1	상	1
11	프로젝트 계획 수립	1) 주요 작업 목록:\n2) 작업 일정:\n3) 역할 분담:	프로젝트 진행을 위한 세부 계획을 수립하세요.	4	2	1	상	1
12	프로젝트 결과 발표 준비	1) 발표 자료 개요:\n2) 주요 성과:\n3) 발표 전략:	프로젝트 결과를 발표할 자료를 준비하세요.	4	3	1	중	1
13	향후 개발 계획 및 개인 목표 설정	1) 향후 개발 계획:\n2) 개인 목표:\n3) 목표 달성을 위한 전략:	향후 개발 계획을 수립하고 개인 목표를 설정하세요.	4	4	1	중	1
\.


--
-- Data for Name: core_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_user (is_superuser, user_id, employee_number, is_admin, tag, role, join_date, "position", job_part, email, password, last_name, first_name, last_login, profile_image, is_active, is_staff, company_id, department_id) FROM stdin;
t	1	1000	t	\N		\N			admin@admin.com	pbkdf2_sha256$1000000$6LwBYRIJ9FssX0xdOvIJs7$/PSO2dmvhB1hqzEcUQRUVTbbjqujOhIXYhxvg5+V5c8=	이	창호	2025-07-28 20:09:57.822363+09		t	t	\N	\N
f	3	1101	f	\N	mentee	2025-02-07	사원	백엔드 개발자	tkddlr@skn11.com	pbkdf2_sha256$1000000$iUeY1TMBbYOBk4bDdfA68o$M/E0XiVhJGf83FMAmZkR1q/VI/WBq+lii+nP1Uxq4ao=	김	상익	2025-07-28 20:12:43.158154+09		t	f	111-11-11111	2
f	4	1102	f	\N	mentee	2025-02-07	사원	AI엔지니어	tjdwl@skn11.com	pbkdf2_sha256$1000000$AvuFeNEfXOXQAC2N2o8yqW$HjzNv+sX5YEVbTiq/t3aO/xZ7kT9kki3FnKWRvV6bIQ=	김	성지	2025-07-28 20:12:44.658728+09		t	f	111-11-11111	3
f	5	1103	f	\N	mentee	2025-02-07	사원	선행 연구	dlrms@skn11.com	pbkdf2_sha256$1000000$FUuUK6sALfCPdEITkK1W3A$xENWtaOcBXUnFq9GLPmc2+S8KsWviu4njZ2CRdNpOFo=	이	근	2025-07-28 20:12:46.37254+09		t	f	111-11-11111	4
f	6	1104	f	\N	mentee	2025-02-07	사원	멘탈케어	gksthf@skn11.com	pbkdf2_sha256$1000000$QKKzF9toGYqClOC6ByneSD$htczukvCzekofMVBJ2j68qXFULWgkTUE5/sdKFnuClQ=	김	한솔	2025-07-28 20:12:48.076449+09		t	f	111-11-11111	5
f	7	1105	f	\N	mentee	2025-02-07	사원	프론트엔드 개발자	tjddlf@skn11.com	pbkdf2_sha256$1000000$IMf990NuOhIQJFA19EeRxn$/XmpO12HayGYS2nDQcqse1LC+B8Bqaded/rIL9ChA/Y=	방	성일	2025-07-28 20:12:49.802417+09		t	f	111-11-11111	6
f	8	1106	f	\N	mentee	2025-02-07	사원	AI엔지니어	junhee@skn11.com	pbkdf2_sha256$1000000$d1SrlXQqquhqYGYBtAboOh$GkEQ+AEKZOz5+b8Wsup6pNfrUdYKRZP2ihO0FUKPK18=	신	준희	2025-07-28 20:12:51.532614+09		t	f	111-11-11111	7
f	10	1108	f	\N	mentee	2025-02-07	사원	사업기획	codms@skn11.com	pbkdf2_sha256$1000000$fjvcKMUHrIIKh6IYcuYq8I$saLnW+oN8YTR4DYZFRfk+JK8fnm8zgD16BNGg3imlqo=	이	채은	2025-07-28 20:12:54.956607+09		t	f	111-11-11111	5
f	11	1109	f	\N	mentee	2025-02-07	사원	프론트엔드 개발자	alsgh@skn11.com	pbkdf2_sha256$1000000$k1OcACoNlhWLHuCMau7HZo$a8kRl0hSpcvneh2uzXUaiBnX0BEXO9iV82Z5JD5dV2s=	정	민호	2025-07-28 20:12:56.656152+09		t	f	111-11-11111	7
f	12	1110	f	\N	mentee	2025-02-07	사원	마케팅	dbqls@skn11.com	pbkdf2_sha256$1000000$MrEf0c3QQzmeG7umpVQ0Sp$5WCkoOxzn2JwHAtF7wLOqusIlOEc25WGo1u0mzUwvnU=	전	유빈	2025-07-28 20:12:58.385859+09		t	f	111-11-11111	5
f	13	1111	f	\N	mentor	2025-02-07	팀장	PM	dkdlatjsh@skn11.com	pbkdf2_sha256$1000000$eJFJmILsgHwmLNTVNA2lgX$9fkThMz45SotsiumbGovNBvF4B1aJMv0SCEzPrnBgk4=	이	선호	2025-07-28 20:13:00.111973+09		t	f	111-11-11111	7
f	14	1112	f	\N	mentee	2025-02-07	사원	이미지 매이커	gusals@skn11.com	pbkdf2_sha256$1000000$VRUX7c0ZoSW74INND7KzHG$QUn6FZEAxMl6Nx4lZ03AtqswiSeJzA90DUrBX+Ik7Gs=	이	현민	2025-07-28 20:13:01.803599+09		t	f	111-11-11111	2
f	15	1113	f	\N	mentee	2025-02-07	사원	AI엔지니어	tlswlstmf@skn11.com	pbkdf2_sha256$1000000$1u8zNeqlDfGZw1vg3vTyB4$m3KE4leLe/1mX9ytpz9gFfsI7aeJcqiuDjUiMInT0V8=	신	진슬	2025-07-28 20:13:03.51861+09		t	f	111-11-11111	6
f	16	1114	f	\N	mentee	2025-02-07	사원	AI엔지니어	gardenkim@skn11.com	pbkdf2_sha256$1000000$M93aknOMzsSGZqIAHf6uKK$r4OhNF2RS39cZoqhbk7N6dRdWrKaL69YwhfQuuLtFxU=	김	정원	2025-07-28 20:13:05.331307+09		t	f	111-11-11111	3
f	17	1115	f	\N	mentee	2025-02-07	사원	백엔드 개발자	qorwkdal@skn11.com	pbkdf2_sha256$1000000$7m8mIAfBFKR2PkA3pz0qV2$LnIHJEMQS2SzkEnG4qmGvCUvjlG8dvgP/kaFl/vI3GE=	백	미송	2025-07-28 20:13:07.081615+09		t	f	111-11-11111	7
f	18	1116	f	\N	mentee	2025-02-07	사원	AI엔지니어	wnsghghkd@skn11.com	pbkdf2_sha256$1000000$IDzhv0GI8WCoDKnlnTfgom$3dUetePXxGuItEcTTD7R07SBWBnM5N53auPMJTy4gvk=	황	준호	2025-07-28 20:13:08.830867+09		t	f	111-11-11111	7
f	19	1117	f	\N	mentee	2025-02-07	사원	프론트엔드 개발자	gudwngudwn@skn11.com	pbkdf2_sha256$1000000$KCb5VNfKcDXMlSvIHs7PsA$FD+0+Hupxdgn3q2RvkGC4Dtf6Pyjl2Rw9l828MhrLN4=	김	형주	2025-07-28 20:13:10.561935+09		t	f	111-11-11111	2
f	20	1118	f	\N	mentee	2025-02-07	사원	AI엔지니어	skchfl@skn11.com	pbkdf2_sha256$1000000$3OYtuqWXbb14BhAkpgLiVr$ratxWoVfZ1hUvM6zR8W7rh8Vz6HVgWYhyqDm/EHLaes=	나	지윤	2025-07-28 20:13:12.387276+09		t	f	111-11-11111	2
f	21	1119	f	\N	mentee	2025-02-07	사원	AI엔지니어	fldhspfqotl@skn11.com	pbkdf2_sha256$1000000$ssylNbdXrUVHNpa0ZcvGIb$eundBHlvXd78c1w4VYaOX3GkIkjIXX4QMgpnytyVQYI=	배	정수	2025-07-28 20:13:14.18544+09		t	f	111-11-11111	6
f	22	1120	f	\N	mentor	2025-02-07	팀장	업무관리	dbsgk@skn11.com	pbkdf2_sha256$1000000$Mmoypxhh6n9bduoOeOLj5Q$yaYv3tT/g9Y1k1f0yCsl94lR4wj0ZHkLaXU8bC4owZI=	이	혜성	2025-07-28 20:13:15.95114+09		t	f	111-11-11111	5
f	23	1121	f	\N	mentor	2025-02-07	팀장	AI엔지니어	guseowkehdck@skn11.com	pbkdf2_sha256$1000000$3xtlNF4LXrtXfGfA3tChEM$xbfKgEhRW8E0sPlrdHRG6ZDEdUOnfGbZ00UHi3bG24o=	이	현대	2025-07-28 20:13:17.659537+09		t	f	111-11-11111	2
f	24	1122	f	\N	mentee	2025-02-07	사원	백엔드 개발자	dlalswjd@skn11.com	pbkdf2_sha256$1000000$7poy3FzKEL9Dm8FscPMh3x$6VzJkLt7Ul0AYUD4FVmBjfoyHxfeDXTk/sD4uFhWJHA=	이	민정	2025-07-28 20:13:19.364976+09		t	f	111-11-11111	6
f	25	1123	f	\N	mentee	2025-02-07	사원	고객관리	dhwjdgus@skn11.com	pbkdf2_sha256$1000000$E5Bl8IvmnqNc6XfM5MEkNl$+ZFJABaaJ5eWcxjwsyweVyo4oAu6o8Z5Qfg8Tw/lyrc=	오	정현	2025-07-28 20:13:21.048531+09		t	f	111-11-11111	5
f	26	1124	f	\N	mentee	2025-02-07	사원	선행 연구	dkswhdgus@skn11.com	pbkdf2_sha256$1000000$9qaBhdvM1OPwOiGjorlHZR$nBySgHbBBkg2FKlgu9wwPi9wJi+HRkgtXwKMjfcT1vo=	안	종현	2025-07-28 20:13:22.713638+09		t	f	111-11-11111	4
f	27	1125	f	\N	mentee	2025-02-07	사원	제품 개발	gusdnr@skn11.com	pbkdf2_sha256$1000000$X3WmLbxmbWWBuvJ6cDfEsB$uIrJ+HNJEGtdZ6lA38pKUEBGcnWXtfZtL/zmHUJ+AtE=	정	현욱	2025-07-28 20:13:24.395399+09		t	f	111-11-11111	4
f	28	1126	f	\N	mentee	2025-02-07	사원	백엔드 개발자	wkdtnakrrjffl@skn11.com	pbkdf2_sha256$1000000$ZLQ97eoggCImIHtG4x4Qw9$m9puOsFtxgmVw2JL+JAyq2NmlUaVeHj9KSZ91+tw7xo=	김	장수	2025-07-28 20:13:26.077298+09		t	f	111-11-11111	3
f	29	1127	f	\N	mentor	2025-02-07	팀장	풀스택 개발자	uugyeong27@skn11.com	pbkdf2_sha256$1000000$BHGBtpBqkptBeQzXZQjEka$k+16ua/FqwNOI0bM4/qjydguN53hBj+AnjlgshgGlrI=	현	유경	2025-07-28 20:13:27.769645+09		t	f	111-11-11111	3
f	30	1128	f	\N	mentee	2025-02-10	팀장	PM	tjddnr93@skn11.com	pbkdf2_sha256$1000000$iRm92ovTXaCAXRuLb3fRLE$kHfzq/Z3MvE5w3RlIY67rsf6Iwu1GuorAwQuY+AstrI=	홍	성욱	2025-07-28 20:13:29.428825+09		t	f	111-11-11111	4
f	31	1129	f	\N	mentee	2025-02-07	사원	제품 개발	qkrtoa@skn11.com	pbkdf2_sha256$1000000$6Zxiljc9Bz9dE1tzrfyQcV$ehPdI1mKLhNVUKl7bw/IqHVGQ5uxvo0mjxEnC9yUJIk=	박	샘	2025-07-28 20:13:31.110075+09		f	f	111-11-11111	4
f	9	1107	f	\N	mentor	2025-02-07	팀장	PM	a99086800@gmail.com	pbkdf2_sha256$1000000$qNzHog12rvaAuYuG68FHMK$OjaCGm+Yp16mTsjAqEEZp8DbxJ9TZnm5B8L+00zRDBY=	성	호진	2025-07-28 20:56:42.941034+09		t	f	111-11-11111	6
f	2	1000	t	\N	mentor	2025-07-28	팀장	LLM 개발	admin@example.com	pbkdf2_sha256$1000000$t9UKTfFkh5jhC0RXAOnYZv$ZpkCap6ZxhZvdhXBHDQf409Au4gQHOYw7VcDc8J6C3Q=	이	창호	2025-07-28 20:56:00.653715+09		t	f	111-11-11111	1
\.


--
-- Data for Name: core_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: core_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2025-07-28 20:10:59.131327+09	111-11-11111	EZFLOW	1	[{"added": {}}]	6	1
2	2025-07-28 20:11:12.53667+09	1	LLM 개발	1	[{"added": {}}]	13	1
3	2025-07-28 20:11:40.795249+09	2	창호 이	1	[{"added": {}}]	9	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	contenttypes	contenttype
5	sessions	session
6	core	company
7	core	emailconfig
8	core	mentorship
9	core	user
10	core	alarm
11	core	chatsession
12	core	chatmessage
13	core	department
14	core	curriculum
15	core	docs
16	core	taskassign
17	core	memo
18	core	taskmanage
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-07-28 20:07:00.306821+09
2	contenttypes	0002_remove_content_type_name	2025-07-28 20:07:00.326181+09
3	auth	0001_initial	2025-07-28 20:07:00.374447+09
4	auth	0002_alter_permission_name_max_length	2025-07-28 20:07:00.377431+09
5	auth	0003_alter_user_email_max_length	2025-07-28 20:07:00.392552+09
6	auth	0004_alter_user_username_opts	2025-07-28 20:07:00.396594+09
7	auth	0005_alter_user_last_login_null	2025-07-28 20:07:00.403098+09
8	auth	0006_require_contenttypes_0002	2025-07-28 20:07:00.405051+09
9	auth	0007_alter_validators_add_error_messages	2025-07-28 20:07:00.40994+09
10	auth	0008_alter_user_username_max_length	2025-07-28 20:07:00.415894+09
11	auth	0009_alter_user_last_name_max_length	2025-07-28 20:07:00.418772+09
12	auth	0010_alter_group_name_max_length	2025-07-28 20:07:00.432131+09
13	auth	0011_update_proxy_permissions	2025-07-28 20:07:00.434901+09
14	auth	0012_alter_user_first_name_max_length	2025-07-28 20:07:00.440335+09
15	core	0001_initial	2025-07-28 20:07:00.705313+09
16	admin	0001_initial	2025-07-28 20:07:00.729126+09
17	admin	0002_logentry_remove_auto_add	2025-07-28 20:07:00.739295+09
18	admin	0003_logentry_add_action_flag_choices	2025-07-28 20:07:00.757577+09
19	sessions	0001_initial	2025-07-28 20:07:00.765711+09
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
mu0hor43tph6hvmopbitfz8r54rd8jzd	.eJytU91v2jAc_F_8OojsfBicp0GhUxCFtiqFokqRk9jEkMRR4pRCxf8-m6-1m_YwaVFefHe-O_-cfID1VoVKblgBfMB2ozT6EYupGAWzfYAmIqiD4tGLbwIcbMrF882IWFq0T-aBEaXTp812Onhx7wb93tJGKZ1vmxebqEBsxXKRboO1fJ_sZ_vJvocm696OP1iLN_IwjMQ9GjvrvRjeLvGmX3mTVSxJMB0sn4NxULvT_BHPIGiBpmZVmFBFgf8BuKhqFRY0Z7rra5Ngp_vaxCR2tTCjn6kYOUiDLKci0wAlBHZxF8LvK4NYscw1u5ZRWNJKacH9nV6XshZKyOJk7kCofTrUOypFYVoYcxvaXhvabdjRhKIr4BdNlrVAJTND56xQsjpml5ncMRYWTR6xCvgIwU4LiDqkSS50CKdZzY5A3ZSsMie9gmUluchYKHK6Mq6XSYgE-KQFEmZ6m6gjgltAn6ikxe64BAih9vHVz2U0mVyZ0HP9TtvuPtnQR66uZdle13HhN0h8aGZuKsZKvOlgVTXniopyfq33K99cy6c25wsYLm_H0zkwwjquRHma6mlO_9b9jy5nscm97Ps99O9-h8N_MAhpo9Lweh2AgC9YRGP9MxkiWdNiJfXHVqhKRJaRWGe2tu5kwrL-WfvFIKV1qndjZiOXR5RAbhOXd1wvQjjysAc5jQgljhMzm3Mbs5hHjHDXcSKMvYR3OHKIh8HhJ6zjPBo:1ugMTC:AzJP5hR0zvdNcpLOJRob2K6E5EBRoKi1i3r-azxXfP0	2025-08-11 20:56:42.941034+09
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 72, true);


--
-- Name: core_alarm_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_alarm_id_seq', 2, true);


--
-- Name: core_chatmessage_message_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_chatmessage_message_id_seq', 1, false);


--
-- Name: core_chatsession_session_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_chatsession_session_id_seq', 1, false);


--
-- Name: core_curriculum_curriculum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_curriculum_curriculum_id_seq', 1, true);


--
-- Name: core_department_department_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_department_department_id_seq', 7, true);


--
-- Name: core_docs_docs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_docs_docs_id_seq', 1, false);


--
-- Name: core_emailconfig_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_emailconfig_id_seq', 1, true);


--
-- Name: core_memo_memo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_memo_memo_id_seq', 1, false);


--
-- Name: core_mentorship_mentorship_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_mentorship_mentorship_id_seq', 2, true);


--
-- Name: core_taskassign_task_assign_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_taskassign_task_assign_id_seq', 29, true);


--
-- Name: core_taskmanage_task_manage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_taskmanage_task_manage_id_seq', 13, true);


--
-- Name: core_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_user_groups_id_seq', 1, false);


--
-- Name: core_user_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_user_user_id_seq', 31, true);


--
-- Name: core_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 3, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 18, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 19, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: core_alarm core_alarm_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_alarm
    ADD CONSTRAINT core_alarm_pkey PRIMARY KEY (id);


--
-- Name: core_chatmessage core_chatmessage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_chatmessage
    ADD CONSTRAINT core_chatmessage_pkey PRIMARY KEY (message_id);


--
-- Name: core_chatsession core_chatsession_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_chatsession
    ADD CONSTRAINT core_chatsession_pkey PRIMARY KEY (session_id);


--
-- Name: core_company core_company_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_company
    ADD CONSTRAINT core_company_pkey PRIMARY KEY (company_id);


--
-- Name: core_curriculum core_curriculum_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_curriculum
    ADD CONSTRAINT core_curriculum_pkey PRIMARY KEY (curriculum_id);


--
-- Name: core_department core_department_department_name_company_id_0bf1d2e1_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_department
    ADD CONSTRAINT core_department_department_name_company_id_0bf1d2e1_uniq UNIQUE (department_name, company_id);


--
-- Name: core_department core_department_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_department
    ADD CONSTRAINT core_department_pkey PRIMARY KEY (department_id);


--
-- Name: core_docs core_docs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_docs
    ADD CONSTRAINT core_docs_pkey PRIMARY KEY (docs_id);


--
-- Name: core_emailconfig core_emailconfig_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_emailconfig
    ADD CONSTRAINT core_emailconfig_email_key UNIQUE (email);


--
-- Name: core_emailconfig core_emailconfig_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_emailconfig
    ADD CONSTRAINT core_emailconfig_pkey PRIMARY KEY (id);


--
-- Name: core_memo core_memo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_memo
    ADD CONSTRAINT core_memo_pkey PRIMARY KEY (memo_id);


--
-- Name: core_mentorship core_mentorship_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_mentorship
    ADD CONSTRAINT core_mentorship_pkey PRIMARY KEY (mentorship_id);


--
-- Name: core_taskassign core_taskassign_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_taskassign
    ADD CONSTRAINT core_taskassign_pkey PRIMARY KEY (task_assign_id);


--
-- Name: core_taskmanage core_taskmanage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_taskmanage
    ADD CONSTRAINT core_taskmanage_pkey PRIMARY KEY (task_manage_id);


--
-- Name: core_user core_user_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user
    ADD CONSTRAINT core_user_email_key UNIQUE (email);


--
-- Name: core_user_groups core_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user_groups
    ADD CONSTRAINT core_user_groups_pkey PRIMARY KEY (id);


--
-- Name: core_user_groups core_user_groups_user_id_group_id_c82fcad1_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user_groups
    ADD CONSTRAINT core_user_groups_user_id_group_id_c82fcad1_uniq UNIQUE (user_id, group_id);


--
-- Name: core_user core_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user
    ADD CONSTRAINT core_user_pkey PRIMARY KEY (user_id);


--
-- Name: core_user_user_permissions core_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user_user_permissions
    ADD CONSTRAINT core_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: core_user_user_permissions core_user_user_permissions_user_id_permission_id_73ea0daa_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user_user_permissions
    ADD CONSTRAINT core_user_user_permissions_user_id_permission_id_73ea0daa_uniq UNIQUE (user_id, permission_id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: core_alarm_user_id_e9532f8a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_alarm_user_id_e9532f8a ON public.core_alarm USING btree (user_id);


--
-- Name: core_chatmessage_session_id_e3c386aa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_chatmessage_session_id_e3c386aa ON public.core_chatmessage USING btree (session_id);


--
-- Name: core_chatsession_user_id_1929cfbb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_chatsession_user_id_1929cfbb ON public.core_chatsession USING btree (user_id);


--
-- Name: core_company_company_id_926e360b_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_company_company_id_926e360b_like ON public.core_company USING btree (company_id varchar_pattern_ops);


--
-- Name: core_curriculum_department_id_5d8af7b3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_curriculum_department_id_5d8af7b3 ON public.core_curriculum USING btree (department_id);


--
-- Name: core_department_company_id_347fca8c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_department_company_id_347fca8c ON public.core_department USING btree (company_id);


--
-- Name: core_department_company_id_347fca8c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_department_company_id_347fca8c_like ON public.core_department USING btree (company_id varchar_pattern_ops);


--
-- Name: core_docs_department_id_5a02f79e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_docs_department_id_5a02f79e ON public.core_docs USING btree (department_id);


--
-- Name: core_emailconfig_email_d3039d1c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_emailconfig_email_d3039d1c_like ON public.core_emailconfig USING btree (email varchar_pattern_ops);


--
-- Name: core_memo_task_assign_id_5d983662; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_memo_task_assign_id_5d983662 ON public.core_memo USING btree (task_assign_id);


--
-- Name: core_memo_user_id_c9f22d42; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_memo_user_id_c9f22d42 ON public.core_memo USING btree (user_id);


--
-- Name: core_taskassign_mentorship_id_id_5460d2bc; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_taskassign_mentorship_id_id_5460d2bc ON public.core_taskassign USING btree (mentorship_id_id);


--
-- Name: core_taskassign_parent_id_e5e25a72; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_taskassign_parent_id_e5e25a72 ON public.core_taskassign USING btree (parent_id);


--
-- Name: core_taskmanage_curriculum_id_189ed120; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_taskmanage_curriculum_id_189ed120 ON public.core_taskmanage USING btree (curriculum_id);


--
-- Name: core_user_company_id_2dbe4115; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_user_company_id_2dbe4115 ON public.core_user USING btree (company_id);


--
-- Name: core_user_company_id_2dbe4115_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_user_company_id_2dbe4115_like ON public.core_user USING btree (company_id varchar_pattern_ops);


--
-- Name: core_user_department_id_172c32d3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_user_department_id_172c32d3 ON public.core_user USING btree (department_id);


--
-- Name: core_user_email_92a71487_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_user_email_92a71487_like ON public.core_user USING btree (email varchar_pattern_ops);


--
-- Name: core_user_groups_group_id_fe8c697f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_user_groups_group_id_fe8c697f ON public.core_user_groups USING btree (group_id);


--
-- Name: core_user_groups_user_id_70b4d9b8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_user_groups_user_id_70b4d9b8 ON public.core_user_groups USING btree (user_id);


--
-- Name: core_user_user_permissions_permission_id_35ccf601; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_user_user_permissions_permission_id_35ccf601 ON public.core_user_user_permissions USING btree (permission_id);


--
-- Name: core_user_user_permissions_user_id_085123d3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX core_user_user_permissions_user_id_085123d3 ON public.core_user_user_permissions USING btree (user_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_alarm core_alarm_user_id_e9532f8a_fk_core_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_alarm
    ADD CONSTRAINT core_alarm_user_id_e9532f8a_fk_core_user_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_chatmessage core_chatmessage_session_id_e3c386aa_fk_core_chat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_chatmessage
    ADD CONSTRAINT core_chatmessage_session_id_e3c386aa_fk_core_chat FOREIGN KEY (session_id) REFERENCES public.core_chatsession(session_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_chatsession core_chatsession_user_id_1929cfbb_fk_core_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_chatsession
    ADD CONSTRAINT core_chatsession_user_id_1929cfbb_fk_core_user_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_curriculum core_curriculum_department_id_5d8af7b3_fk_core_depa; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_curriculum
    ADD CONSTRAINT core_curriculum_department_id_5d8af7b3_fk_core_depa FOREIGN KEY (department_id) REFERENCES public.core_department(department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_department core_department_company_id_347fca8c_fk_core_company_company_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_department
    ADD CONSTRAINT core_department_company_id_347fca8c_fk_core_company_company_id FOREIGN KEY (company_id) REFERENCES public.core_company(company_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_docs core_docs_department_id_5a02f79e_fk_core_depa; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_docs
    ADD CONSTRAINT core_docs_department_id_5a02f79e_fk_core_depa FOREIGN KEY (department_id) REFERENCES public.core_department(department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_memo core_memo_task_assign_id_5d983662_fk_core_task; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_memo
    ADD CONSTRAINT core_memo_task_assign_id_5d983662_fk_core_task FOREIGN KEY (task_assign_id) REFERENCES public.core_taskassign(task_assign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_memo core_memo_user_id_c9f22d42_fk_core_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_memo
    ADD CONSTRAINT core_memo_user_id_c9f22d42_fk_core_user_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_taskassign core_taskassign_mentorship_id_id_5460d2bc_fk_core_ment; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_taskassign
    ADD CONSTRAINT core_taskassign_mentorship_id_id_5460d2bc_fk_core_ment FOREIGN KEY (mentorship_id_id) REFERENCES public.core_mentorship(mentorship_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_taskassign core_taskassign_parent_id_e5e25a72_fk_core_task; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_taskassign
    ADD CONSTRAINT core_taskassign_parent_id_e5e25a72_fk_core_task FOREIGN KEY (parent_id) REFERENCES public.core_taskassign(task_assign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_taskmanage core_taskmanage_curriculum_id_189ed120_fk_core_curr; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_taskmanage
    ADD CONSTRAINT core_taskmanage_curriculum_id_189ed120_fk_core_curr FOREIGN KEY (curriculum_id) REFERENCES public.core_curriculum(curriculum_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_user core_user_company_id_2dbe4115_fk_core_company_company_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user
    ADD CONSTRAINT core_user_company_id_2dbe4115_fk_core_company_company_id FOREIGN KEY (company_id) REFERENCES public.core_company(company_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_user core_user_department_id_172c32d3_fk_core_depa; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user
    ADD CONSTRAINT core_user_department_id_172c32d3_fk_core_depa FOREIGN KEY (department_id) REFERENCES public.core_department(department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_user_groups core_user_groups_group_id_fe8c697f_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user_groups
    ADD CONSTRAINT core_user_groups_group_id_fe8c697f_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_user_groups core_user_groups_user_id_70b4d9b8_fk_core_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user_groups
    ADD CONSTRAINT core_user_groups_user_id_70b4d9b8_fk_core_user_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_user_user_permissions core_user_user_permi_permission_id_35ccf601_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user_user_permissions
    ADD CONSTRAINT core_user_user_permi_permission_id_35ccf601_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_user_user_permissions core_user_user_permi_user_id_085123d3_fk_core_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user_user_permissions
    ADD CONSTRAINT core_user_user_permi_user_id_085123d3_fk_core_user FOREIGN KEY (user_id) REFERENCES public.core_user(user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_core_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_core_user_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

